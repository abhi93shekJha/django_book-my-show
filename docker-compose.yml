version: "3.9"   # version of docker compose syntax, if they release a new version, it won't break our services

services:
  app:   # this is the name of our service that will build docker file
    build:
      context: .   # when building using the root directory (where dockerfile is present which we are building)
      args:
        - DEV=true   # DEV variable will be used inside dockerfile, before building we are setting it to true
    ports:
      - "8000:8000"    # maps port 8000 on our local machine to port 8000 in docker container. Now we can make API calls from host machine, since 8000 on localhost is active.
    volumes:
      - ./book_my_show:/app   # used for mapping directories from our system to docker container, /app here is inside of docker container
                # any code changes to local, will reflect in /app inside docker in real time, no need to rebuild everytime
                # also any data created inside /app inside container will persist in local inside './book_my_show'
      - dev-static-data:/vol/web
    command: >   # we can specify the command that will be used when we run docker compose by docker-compose run, this can be overridden by sepecifying the command with docker-compose run
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:    # Values helpful to connect to db server, we will tell django how to use these value to connect to db
      - DB_HOST=db   # all the services in docker-container can interact will each other using host name (db here)
      - DB_NAME=devdb   # all the values are matching the values provided in db service, for this service to connect to db service
      - DB_USER=devuser
      - DB_PASS=changeme
      - DEBUG=1   # this variable is being used in setting.py
    depends_on:  # this configuration will make db service start first before starting the app service.
      - db

  db:
    image: postgres:13-alpine
    volumes: # this will persist the data in our local, which this service will start using as soon as it starts again
      - dev-db-data:/var/lib/postgresql/data       # latter is the data location inside postgresql inside container
    environment:  # setting initial database configuration for new db service
                  # so when database first starts, it will create a new database devdb, user to be devuser, with password changeme. All for local dev server
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

volumes:
  dev-db-data:
  dev-static-data:
